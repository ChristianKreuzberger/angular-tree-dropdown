!function(){"use strict";var e=angular.module("ui.treeDropdown",["ui.bootstrap"]);e.directive("uibTreeDropdown",function(){return{restrict:"E",scope:{data:"=",selected:"="},templateUrl:"angular-uib-tree-dropdown.html",controllerAs:"vm",bindToController:!0,controller:"UibTreeDropdownController"}}),e.controller("UibTreeDropdownController",["$scope",function(e){function t(e,n){angular.forEach(e,function(e){l.flatData.push(e),l.levelsById[e.id]=n,e.children&&t(e.children,n+1)})}var l=this;l.levelsById={},l.flatData=[],l.childClick=function(e){l.selected=e||null},e.$watch("vm.data",function(){l.levelsById={},l.flatData=[],t(l.data,0)})}]),e.run(["$templateCache",function(e){e.put("angular-uib-tree-dropdown.html",'<div uib-dropdown keyboard-nav>    \x3c!-- selected element --\x3e    <button class="btn btn-default" role="button" uib-dropdown-toggle>        {{ vm.selected.name }}        <span class="caret"></span>    </button>    \x3c!-- Dropdown --\x3e    <ul class="dropdown-menu dropdown-tree" uib-dropdown-menu role="menu">        <li role="menuitem" ng-repeat="obj in vm.flatData">            <a tabindex="0" href="#" class="level-{{ vm.levelsById[obj.id] }}"               ng-class="{\'selected\': vm.selected.id == obj.id}" ng-click="vm.childClick(obj)">{{ obj.name }}</a>        </li>    </ul></div>')}])}();